/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sugarbeach.view;

import com.sugarbeach.resource.AnswerResource;
import com.sugarbeach.resource.FeedbackResource;
import com.sugarbeach.resource.QuestionnaireResource;
import com.sugarbeach.service.FeedbackClientService;
import com.sugarbeach.service.QuestionnaireClientService;
import java.awt.Dimension;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

import jdk.nashorn.internal.objects.NativeArray;

/**
 *
 * @author lakitha
 */
public class QuestionnaireForm extends javax.swing.JFrame {


    /**
     * Creates new form FeedbackForm1
     * @param name
     * @throws java.rmi.RemoteException
     */
    public QuestionnaireForm(String name) throws RemoteException {
        initComponents();
        nextQuestion();
        this.customerName = name;
        btnSubmit.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnSubmit = new javax.swing.JButton();
        lblQuection = new javax.swing.JLabel();
        cbxAnswer3 = new javax.swing.JCheckBox();
        cbxAnswer1 = new javax.swing.JCheckBox();
        cbxAnswer2 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSubmit.setText("Next");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lblQuection.setText("question");

        cbxAnswer3.setText("answer3");
        cbxAnswer3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxAnswer3ActionPerformed(evt);
            }
        });

        cbxAnswer1.setText("answer1");
        cbxAnswer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxAnswer1ActionPerformed(evt);
            }
        });

        cbxAnswer2.setText("answer2");
        cbxAnswer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxAnswer2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Feedback Form");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQuection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxAnswer3)
                            .addComponent(cbxAnswer1)
                            .addComponent(cbxAnswer2))
                        .addGap(0, 363, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(lblQuection, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxAnswer1)
                .addGap(18, 18, 18)
                .addComponent(cbxAnswer2)
                .addGap(18, 18, 18)
                .addComponent(cbxAnswer3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(btnSubmit)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        try {
            btnSubmit.setEnabled(false);
            if (cbxAnswer1.isSelected() || cbxAnswer2.isSelected() || cbxAnswer3.isSelected()) {
                bindFeedback();
            }
            nextQuestion();
            cbxAnswer1.setEnabled(true);
            cbxAnswer2.setEnabled(true);
            cbxAnswer3.setEnabled(true);
        } catch (RemoteException ex) {
            Logger.getLogger(QuestionnaireForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void cbxAnswer3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxAnswer3ActionPerformed
        btnSubmit.setEnabled(true);
        if (cbxAnswer3.isSelected()) {
            cbxAnswer1.setEnabled(false);
            cbxAnswer2.setEnabled(false);
        } else {
            cbxAnswer1.setEnabled(true);
            cbxAnswer2.setEnabled(true);
        }

    }//GEN-LAST:event_cbxAnswer3ActionPerformed

    private void cbxAnswer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxAnswer1ActionPerformed
        btnSubmit.setEnabled(true);
        if (cbxAnswer1.isSelected()) {
            cbxAnswer2.setEnabled(false);
            cbxAnswer3.setEnabled(false);
        } else {
            cbxAnswer2.setEnabled(true);
            cbxAnswer3.setEnabled(true);
        }

    }//GEN-LAST:event_cbxAnswer1ActionPerformed

    private void cbxAnswer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxAnswer2ActionPerformed
        btnSubmit.setEnabled(true);
        if (cbxAnswer2.isSelected()) {
            cbxAnswer1.setEnabled(false);
            cbxAnswer3.setEnabled(false);
        } else {
            cbxAnswer1.setEnabled(true);
            cbxAnswer3.setEnabled(true);
        }

    }//GEN-LAST:event_cbxAnswer2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(QuestionnaireForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(QuestionnaireForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(QuestionnaireForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(QuestionnaireForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                try {
//                    new QuestionnaireForm().setVisible(true);
//                } catch (RemoteException ex) {
//                    Logger.getLogger(QuestionnaireForm.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit;
    private javax.swing.JCheckBox cbxAnswer1;
    private javax.swing.JCheckBox cbxAnswer2;
    private javax.swing.JCheckBox cbxAnswer3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblQuection;
    // End of variables declaration//GEN-END:variables
    private List<QuestionnaireResource> questionnaires;
    private int questionNumber;
    private List<AnswerResource> currentAnswerList;
    private List<FeedbackResource> feedbackList = new ArrayList<>();
    private final String customerName;
    private boolean isLastQuestion;

    private void bindQuestions(int questionNumber) throws RemoteException {
        QuestionnaireClientService questionnaireClientService = new QuestionnaireClientService();
        questionnaires = questionnaireClientService.getAllQuestionWithAnswers();

        if(questionNumber == (questionnaires.size() -1)){
                isLastQuestion = true;
        }

        //init
        if (questionnaires.size() > questionNumber) {
            QuestionnaireResource questionnaireResource = questionnaires.get(questionNumber);
            lblQuection.setText(questionnaireResource.getQuestion());
            System.out.println(questionnaireResource.getQuestion());

            List<String> answerList = questionnaireResource.getAnswerList();
            this.currentAnswerList = questionnaireResource.getAnswerResourceList();
            for (int x = 0; x < answerList.size(); x++) {
                switch (x) {
                    case 0:
                        cbxAnswer1.setSelected(false);
                        cbxAnswer1.setText(answerList.get(x));
                        break;
                    case 1:
                        cbxAnswer2.setSelected(false);
                        cbxAnswer2.setText(answerList.get(x));
                        break;
                    case 2:
                        cbxAnswer3.setSelected(false);
                        cbxAnswer3.setText(answerList.get(x));
                        break;
                    default:
                        break;
                }
            }
        }
    }

    private void nextQuestion() throws RemoteException {
        bindQuestions(questionNumber++);
    }

    private void bindFeedback() throws RemoteException {
        AnswerResource answerResource = null;
        if(cbxAnswer1.isSelected()) {
            answerResource = getSelectedAnswerResource(cbxAnswer1.getText());
        } else if(cbxAnswer2.isSelected()) {
            answerResource = getSelectedAnswerResource(cbxAnswer2.getText());
        } else if(cbxAnswer3.isSelected()) {
            answerResource = getSelectedAnswerResource(cbxAnswer3.getText());
        }

        if(answerResource != null) {
            FeedbackResource feedbackResource = new FeedbackResource();
            feedbackResource.setCustomerName(customerName);
            feedbackResource.setAnswerId(answerResource.getAnswerId());
            feedbackList.add(feedbackResource);
        }

        if(isLastQuestion) {
            FeedbackClientService feedbackClientService = new FeedbackClientService();
            if (feedbackClientService.save(feedbackList));
                JOptionPane.showMessageDialog(jPanel1, "Thank you for your feedback!");
        }

    }

    private AnswerResource getSelectedAnswerResource(String answer) {
        for(AnswerResource answerResource : currentAnswerList) {
            if (answerResource.getAnswer().equals(answer)) {
                        return answerResource;
            }
         }
        return null;
    }
}
